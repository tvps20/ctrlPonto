@using CtrlPonto.Models
@model CtrlPonto.Models.Trabalho
@{
    ViewBag.Title = "Detalhes do Dia";
    Layout = "~/views/Shared/_Layout.cshtml";
    Ponto pontoControle = ViewBag.Ponto;
    Trabalho trabalho = Model;
    List<Ponto> pontos = ViewBag.Pontos;
    }

    <br />

    @using (Html.BeginForm("Index", "Trabalho", null, FormMethod.Post, new { Class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="modal-body">
            <fieldset>
                <legend>@Model.Data.ToLongDateString().ToUpper()</legend>

                <br />
                <div class="row">
                    <div class="col-md-5">
                        
                        <div class="row" hidden>
                            <div class="col-md-12">
                                @Html.TextBoxFor(model => Model.Id, new { Class = "ponto form-control input-sm" })
                            </div>
                        </div> 
                        <div class="row">
                            <div class="col-md-12">
                                @Html.LabelFor(model => Model.Data, new { Class = "text-left" })
                                @Html.TextBoxFor(model => Model.Data, new { Class = "date form-control input-sm", @disabled = "disabled" })
                            </div>
                        </div>
                        <br/>
                        <div class="row">
                            <div class="col-md-12">
                                @Html.LabelFor(model => Model.Jornada, new {Class = "text-left"})
                                @Html.TextBoxFor(model => Model.Jornada, new {Class = "ponto form-control input-sm"})
                                @Html.ValidationMessageFor(model => model.Jornada, "", new {Class = "text-danger"})
                            </div>
                        </div>
                    </div>

                    <div class="col-md-7">
                        <div class="row">
                            <div class="col-xl-7 col-lg-7">
                                <br/>
                                <div class="card card-stats mb-4 mb-xl-0">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col">
                                                <h5 class="card-title text-uppercase text-muted mb-0">Horas Trabalhadas</h5>
                                                <span class="h2 font-weight-bold mb-0 text-primary mr-2">@Model.HorasTrabalho.ToString(@"hh\:mm")</span>
                                            </div>
                                            <div class="col-auto">
                                                <div class="icon icon-shape bg-danger text-white rounded-circle shadow">
                                                    <i class="fas fa-chart-bar"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="mt-3 mb-0 text-muted text-sm">
                                            <span class="text-nowrap">Baseado na jornada</span>
                                        </p>
                                    </div>
                                </div>
                            </div>

                            <div class="col-xl-5 col-lg-5">
                                <br/>
                                <div class="card card-stats mb-4 mb-xl-0">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col">
                                                <h5 class="card-title text-uppercase text-muted mb-0">Saldo de hoje</h5>
                                                <span class="h2 font-weight-bold mb-0  mr-2 @(Model.Saldo.Hours >= 0 ? "text-success": "text-danger")">@(Model.Saldo.Hours >= 0 ? "" : "-") @Model.Saldo.ToString(@"hh\:mm")</span>
                                            </div>
                                            <div class="col-auto">
                                                <div class="icon icon-shape bg-danger text-white rounded-circle shadow">
                                                    <i class="fas fa-chart-bar"></i>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="mt-3 mb-0 text-muted text-sm">
                                            <span class="text-nowrap">Baseado na jornada</span>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br /><br />

                <table class="table table-condensed table-striped">
                    <thead>
                        <tr>
                            <th scope="col">Hora</th>
                            <th class="text-center">Tipo</th>
                            <th scope="col">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                    <tbody>
                        @foreach (var ponto in pontos)
                        {
                            <tr>                                
                                <td>@ponto.Hora.ToString("HH:mm")</td>
                                <td class="text-center">@ponto.Tipo</td>
                                <td class="text-right">
                                    <button class="btn btn-xs btn-danger" type="button" onclick="MensagemConfirma('Ateção', 'Deseja apagar o ponto @ponto.Hora.ToString("HH:mm")?', '@Url.Action("ApagarPonto", "Ponto", new { id = ponto.Id, idTrabalho = trabalho.Id })')">Excluir</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </fieldset>
        </div>

        <br />

        <div class="float-right">
            <a type="button" class="btn btn-secondary" href="@Url.Action("Index", "Trabalho")">Voltar</a>
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#exampleModal">Adicionar</button>
            <button type="submit" class="btn btn-primary">Salvar</button>
        </div>
    }

    <br /><br />

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Novo Ponto de Trabalho</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="col-md-12">
                    @using (Html.BeginForm("AdicionarPonto", "Ponto", new { Class = "form-horizontal", modelList = new List<Trabalho> { Model } }, FormMethod.Post, null))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="modal-body">
                            <fieldset>
                                <legend align="center">Ponto do dia</legend>
                                
                                <br/>
                                
                                <div class="row" style="margin-left: 50px;">
                                    <div class="col-sm-12" >
                                        <div class="row" hidden>
                                            <div class="col-md-12">
                                                @Html.TextBoxFor(model => model.Id, new { Class = "ponto form-control input-sm" })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-12">
                                                @Html.LabelFor(model => pontoControle.Hora, new { Class = "text-left" })
                                                @Html.TextBoxFor(model => pontoControle.Hora.TimeOfDay, new { Class = "ponto form-control input-sm" })
                                                @Html.ValidationMessageFor(model => pontoControle.Hora, "", new { Class = "text-danger" })
                                            </div>
                                        </div>
                                        <br />
                                        <div class="row">
                                            <div class="col-md-12">
                                                @Html.LabelFor(pontoDia => pontoControle.Tipo, new { Class = "text-left" })
                                                <select id="TipoPonto" name="TipoPonto" class="form-control input-sm">
                                                    <option value="Entrada" @if(pontoControle.Tipo.Equals("Entrada"))
                                                                            {
                                                                                @:selected=""
                                                                            }>Entrada</option>
                                                    <option value="Saída" @if(pontoControle.Tipo.Equals("Saída"))
                                                                          {
                                                                              @:selected=""
                                                                          }>Saída</option>
                                                </select>
                                                @Html.ValidationMessageFor(pontoDia => pontoControle.Tipo, "", new { Class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />
                            </fieldset>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                            <button type="submit" class="btn btn-primary">Salvar</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/Mascaras")
    }
